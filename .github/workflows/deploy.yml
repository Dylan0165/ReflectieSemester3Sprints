name: Build & Deploy Reflectie (K3s Canary)

on:
  push:
    branches:
      - stable
      - canary

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build React app
        run: npm run build
        
      - name: Commit build output
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add dist -f
          git commit -m "Add build output" || echo "No changes"
          git push origin HEAD:${{ github.ref_name }}

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - uses: actions/checkout@v4
      
      - name: Apply manifests to K3s
        run: |
          cd k3s-manifests
          
          # Apply Traefik config in kube-system namespace
          if [ -f traefik-config.yaml ]; then
            kubectl -n kube-system apply -f traefik-config.yaml
            kubectl -n kube-system rollout restart deploy/traefik || true
          fi
          
          # Apply Reflectie resources in reflectie namespace
          kubectl -n reflectie apply -f nginx-configmap.yaml
          kubectl -n reflectie apply -f reflectie-service.yaml
          kubectl -n reflectie apply -f reflectie-ingress.yaml
          
          # Update webroot ConfigMap
          kubectl -n reflectie delete cm reflectie-webroot --ignore-not-found=true
          kubectl -n reflectie create cm reflectie-webroot --from-file=/tmp/webroot
          
          # Apply deployments and restart rollout
          kubectl -n reflectie apply -f reflectie-stable.yaml
          kubectl -n reflectie apply -f reflectie-canary.yaml
          kubectl -n reflectie rollout restart deploy/reflectie-${{ github.ref_name }}
